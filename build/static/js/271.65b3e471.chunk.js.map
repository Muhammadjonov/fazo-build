{"version":3,"file":"static/js/271.65b3e471.chunk.js","mappings":"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","sources":["components/BreadcrumbComp/index.tsx","components/PaginationComp/index.tsx","components/ProductCard/index.tsx","components/Buttons/AddCartBtn/index.tsx","components/ProductCardCol/index.tsx","pages/SearchResult/index.tsx"],"sourcesContent":["import React from 'react'\nimport { Breadcrumb } from \"antd\";\nimport { Link } from 'react-router-dom';\nimport \"./_style.scss\";\nimport { useT } from '../../custom/hooks/useT';\n\ninterface IBreadcrumbComp {\n  breadcrumbs:\n  {\n    id: string,\n    toUrl: string,\n    text: string\n  }[]\n\n}\n\nfunction BreadcrumbComp(props: IBreadcrumbComp) {\n  const { breadcrumbs } = props;\n\n  const { lang } = useT();\n\n  return (\n      // @ts-ignore\n      <Breadcrumb\n      className='breadcrumb_comp'\n      separator={<i className=\"fa-solid fa-angle-right\"></i>}\n    >\n      {\n        breadcrumbs.map(breadcrumb => (\n            // @ts-ignore\n            <Breadcrumb.Item key={breadcrumb.id}>\n            <Link className=\"breadcrm_link\" to={breadcrumb.toUrl}>{breadcrumb.text} </Link> </Breadcrumb.Item>\n        ))\n      }\n    </Breadcrumb>\n  )\n}\n\nexport default BreadcrumbComp;","import { Pagination } from 'antd';\nimport \"./_style.scss\";\n\ninterface IPaginationComp {\n  totalCount: number,\n  pageCount: number,\n  currentPage: number,\n  perPage: number,\n  page: number,\n  setPage: (page: number) => void\n\n}\n\nfunction PaginationComp(props: IPaginationComp) {\n  const { totalCount, perPage = 20, page, setPage } = props;\n\n\n\n  const onChange = (pageNumber: number) => {\n    setPage(pageNumber);\n  }\n\n  return (\n    <div className=\"pagination__area\">\n      <Pagination\n        className=\"product_view_pagination\"\n        current={page}\n        total={totalCount}\n        onChange={onChange}\n        hideOnSinglePage={true}\n        showSizeChanger={false}\n        pageSize={perPage}\n      />\n    </div>\n  )\n}\n\nexport default PaginationComp","import { Card } from 'antd';\nimport React from 'react'\nimport { Link } from 'react-router-dom';\nimport { ProductType } from '../../types';\nimport \"./_style.scss\";\n\n\n\nfunction ProductCard(props: ProductType) {\n\n  const {\n    name,\n    brandName,\n    slug,\n    price,\n    old_price,\n    imageUrl,\n  } = props;\n\n\n  return (\n    <Card className=\"product_card\" bordered={false} hoverable>\n      <div className=\"card_body\">\n        <Link className=\"product_view_link\" to={\"#\"}>\n          <figure>\n            <img src={imageUrl ?? \"\"} alt={name} className=\"product_card_img\" />\n          </figure>\n        </Link>\n        <p className=\"price title18_bold\">\n          {price} сум\n        </p>\n        <del className='old_price p14_regular'>{old_price} сум</del>\n        <Link className=\"product_view_link\" to={\"#\"}>\n          <h5 className=\"product_name\">\n            {name}\n          </h5>\n        </Link>\n      </div>\n      <div className=\"card_footer\">\n        <ul>\n          <li>\n            <button type='button'>\n              <img src={\"/assets/icons/filled_cart.svg\"} alt=\"cart\" />\n            </button>\n          </li>\n          <li>\n            <button type='button'>\n              <img src={\"/assets/icons/filled_heart.svg\"} alt=\"heart\" />\n            </button>\n          </li>\n          <li>\n            <button type='button'>\n              <i className=\"fa-solid fa-scale-balanced\"></i>\n            </button>\n          </li>\n        </ul>\n      </div>\n    </Card >\n  )\n}\n\nexport default ProductCard","\n\nimport \"./_style.scss\";\n\nconst AddCartBtn = () => {\n  return (\n    <button type='button' className=\"add_cart_btn\">\n      <img src=\"/assets/icons/white_cart.svg\" alt=\"cart\" /> <span>В корзину</span>\n    </button>\n  )\n}\n\nexport default AddCartBtn;","import React from 'react'\nimport { Card } from 'antd';\nimport { Link } from 'react-router-dom';\nimport \"./_style.scss\";\nimport AddCartBtn from '../Buttons/AddCartBtn';\nimport { ProductType } from '../../types';\n\n\n\nfunction ProductCardCol(props: ProductType) {\n\n  const {\n    imageUrl,\n    price,\n    old_price,\n    name,\n    brandName\n  } = props;\n\n  return (\n    <Card className=\"product_card_col\" bordered={false} hoverable>\n      <div className=\"card_body\">\n        <div className=\"card_left\">\n          <Link className=\"product_view_link\" to={\"#\"}>\n            <figure>\n              <img src={imageUrl ?? \"\"} alt=\"watch\" className=\"product_card_img\" />\n            </figure>\n          </Link>\n          <div className=\"desc\">\n            <Link className=\"product_view_link\" to={\"#\"}>\n              <h5 className=\"product_name title24_bold\">\n                {name}\n              </h5>\n            </Link>\n            <div className=\"desc_body p16_regular\">\n              <p className=\"brend p16_regular\">\n                Brend: <span className=\"title18_bold\">{brandName}</span>\n              </p>\n              {/* <p className=\"manufactor p16_regular\">\n                Ishlab chiqaruvchi davlat: <span className=\"title18_bold\">{manufactor}</span>\n              </p>\n              <p className=\"type p16_regular\">\n                Turi: <span className=\"title18_bold\">{type}</span>\n              </p> */}\n            </div>\n          </div>\n        </div>\n        <div className=\"card_right\">\n          <h5 className=\"title18_bold per_month\">\n            {price} сум\n          </h5>\n          <p className=\"price\">\n            {old_price} сум\n          </p>\n          <AddCartBtn />\n          <div className=\"card_footer\">\n            <ul>\n              <li>\n                <button type='button'>\n                  <img src={\"/assets/icons/filled_heart.svg\"} alt=\"heart\" />\n                </button>\n              </li>\n              <li>\n                <button type='button'>\n                  <i className=\"fa-solid fa-scale-balanced\"></i>\n                </button>\n              </li>\n            </ul>\n          </div>\n        </div>\n      </div>\n    </Card >\n  )\n}\n\nexport default ProductCardCol","import { useCallback, useEffect, useState } from \"react\";\nimport { Col, Row, Collapse } from \"antd\";\n\nimport { useForm, SubmitHandler } from \"react-hook-form\";\nimport \"./_style.scss\";\nimport ProductCard from \"../../components/ProductCard\";\nimport PaginationComp from \"../../components/PaginationComp\";\nimport BreadcrumbComp from \"../../components/BreadcrumbComp\";\nimport ProductCardCol from \"../../components/ProductCardCol\";\nimport ShowMoreBtn from \"../../components/Buttons/ShowMoreBtn\";\nimport { useSearchParams } from \"react-router-dom\";\nimport baseAPI from \"../../api/baseAPI\";\nimport { SearchInfoType, SearchResType } from \"../../types\";\nimport { searchUrl } from \"../../api/apiUrls\";\n\nconst { Panel } = Collapse;\n\ntype Inputs = {\n  example: string;\n  exampleRequired: string;\n};\n\ntype GridType = {\n  multiple: boolean;\n  one: boolean;\n};\n\nconst breadcrumbs = [\n  {\n    id: \"!\",\n    toUrl: \"/\",\n    text: \"Главная\",\n  },\n  {\n    id: \"2\",\n    toUrl: \"#\",\n    text: \"Результаты поиска\",\n  },\n];\n\nfunction SearchResult() {\n  const [searchParams] = useSearchParams();\n  let category = searchParams.get(\"category\");\n  let key = searchParams.get(\"key\");\n  const [searchResultProducts, setSearchResultProducts] = useState<SearchInfoType>({} as SearchInfoType);\n  const [page, setPage] = useState<number>(1);\n\n\n  const [grid, setGrid] = useState<GridType>({\n    multiple: true,\n    one: false,\n  });\n  const {\n    register,\n    handleSubmit,\n    watch,\n    formState: { errors },\n  } = useForm<Inputs>();\n  const onSubmit: SubmitHandler<Inputs> = (data) => console.log(data);\n\n\n  // grid ni o'zgartirish logikasi\n\n  const handleChangeGrid = (grid: GridType) => {\n    setGrid((prev) => ({\n      ...prev,\n      ...grid,\n    }));\n  };\n\n  const getSearchResultProducts = useCallback(() => {\n    baseAPI.fetchWithPagination<SearchResType>({ url: searchUrl, page, params: { category, key } })\n      .then((res) => {\n        if (res.data.status === 200) {\n          setSearchResultProducts(res.data.data);\n        }\n      })\n  }, [category, key])\n\n  useEffect(() => {\n    getSearchResultProducts();\n  }, [getSearchResultProducts])\n\n  useEffect(() => {\n    window.scrollTo({\n      top: 0,\n      behavior: \"smooth\"\n    })\n  }, [page])\n\n  let { items, _links, _meta } = searchResultProducts;\n\n  return (\n    <section className=\"search_result_wrapper\">\n      <div className=\"container\">\n        <div className=\"search_result_body\">\n          <Row gutter={[30, 30]}>\n            <Col lg={30}>\n              <Row gutter={[30, 30]}>\n                <Col sm={24} xs={24}>\n                  <div className=\"search_right_top\">\n                    <div className=\"breadcrumb_area\">\n                      <BreadcrumbComp breadcrumbs={breadcrumbs} />\n                    </div>\n                    {\n                      items?.length !== 0 && (\n                        <div className=\"right_top_change_grid\">\n                          <button type='button' onClick={() => handleChangeGrid({ multiple: true, one: false })}>\n                            <img src={`/assets/icons/${grid.multiple ? \"red_grid_multiple\" : \"grid_multiple\"}.svg`} alt=\"grid_multiple\" />\n                          </button>\n                          <button type='button' onClick={() => handleChangeGrid({ multiple: false, one: true })}>\n                            <img src={`/assets/icons/${grid.multiple ? \"grid_one\" : \"red_grid_one\"}.svg`} alt=\"grid_one\" />\n                          </button>\n                        </div>\n                      )\n                    }\n                  </div>\n                </Col>\n                {\n                  items?.length !== 0 ?\n                    (\n                      grid.multiple\n                        ? items?.map((product) => (\n                          <Col lg={6} md={8} sm={12} xs={24} key={product.id}>\n                            <ProductCard {...product} />\n                          </Col>\n                        ))\n                        : items?.map((product) => (\n                          <Col sm={24} xs={24} key={product.id}>\n                            <ProductCardCol {...product} />\n                          </Col>\n                        ))\n\n                    ) : (\n                      <Col xs={24}>\n                        Qidiruv bo'yicha hech narsa topilmadi\n                      </Col>\n                    )\n                }\n              </Row>\n              <div className=\"search_pagination_block\">\n                {/* <div className=\"search_showmore_btn\">\n                    <ShowMoreBtn />\n                  </div> */}\n                {_meta?.pageCount > 1 && (\n                  <PaginationComp {..._meta} page={page} setPage={setPage} />\n                )}\n              </div>\n            </Col>\n          </Row>\n        </div>\n      </div>\n    </section>\n  );\n}\n\nexport default SearchResult;\n"],"names":["props","breadcrumbs","useT","lang","className","separator","map","breadcrumb","to","toUrl","text","id","totalCount","perPage","page","setPage","current","total","onChange","pageNumber","hideOnSinglePage","showSizeChanger","pageSize","name","price","brandName","slug","old_price","imageUrl","bordered","hoverable","src","alt","type","Collapse","useSearchParams","searchParams","category","get","key","useState","searchResultProducts","setSearchResultProducts","multiple","one","grid","setGrid","useForm","handleChangeGrid","register","handleSubmit","watch","formState","errors","prev","getSearchResultProducts","useCallback","baseAPI","url","searchUrl","params","then","res","data","status","useEffect","window","scrollTo","top","behavior","items","_meta","_links","gutter","lg","sm","xs","BreadcrumbComp","length","onClick","product","md","ProductCard","ProductCardCol","pageCount","PaginationComp"],"sourceRoot":""}