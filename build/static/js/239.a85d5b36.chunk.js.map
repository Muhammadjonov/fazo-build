{"version":3,"file":"static/js/239.a85d5b36.chunk.js","mappings":"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","sources":["components/BreadcrumbComp/index.tsx","components/Buttons/OutlineBtn/index.tsx","components/Form/InputComp/index.tsx","pages/Checkout/TopTitleArea/index.tsx","pages/Checkout/OrderCard/index.tsx","components/Form/SelectComp/index.tsx","components/Form/DatePickerComp/index.tsx","pages/Checkout/index.tsx"],"sourcesContent":["import React from 'react'\nimport { Breadcrumb } from \"antd\";\nimport { Link } from 'react-router-dom';\nimport \"./_style.scss\";\nimport { useT } from '../../custom/hooks/useT';\n\ninterface IBreadcrumbComp {\n  breadcrumbs:\n  {\n    id: string,\n    toUrl: string,\n    text: string\n  }[]\n\n}\n\nfunction BreadcrumbComp(props: IBreadcrumbComp) {\n  const { breadcrumbs } = props;\n\n  const { lang } = useT();\n\n  return (\n    <Breadcrumb\n      className='breadcrumb_comp'\n      separator={<i className=\"fa-solid fa-angle-right\"></i>}\n    >\n      {\n        breadcrumbs.map((breadcrumb) => {\n          let last = breadcrumbs[breadcrumbs?.length - 1].id === breadcrumb.id;\n          return (\n            <Breadcrumb.Item key={breadcrumb.id}>\n              {\n                last ? (breadcrumb.text)\n                  : (\n                    <Link className=\"breadcrm_link\" to={breadcrumb.toUrl}>{breadcrumb.text}\n                    </Link>\n                  )\n              }\n            </Breadcrumb.Item>\n          )\n        }\n        )\n      }\n    </Breadcrumb>\n  )\n}\n\nexport default BreadcrumbComp;","import { Button } from 'antd';\nimport React from 'react'\nimport \"./_style.scss\";\n\ninterface IOutlineBtn {\n  text: string,\n  onClick?: () => void\n}\nconst OutlineBtn = (props: IOutlineBtn) => {\n  const { text, onClick } = props;\n  return (\n    <Button onClick={onClick} className=\"outline__custom__btn\" ghost>\n      {text}\n    </Button>\n  )\n}\n\nexport default OutlineBtn","import React from 'react'\nimport { UseFormRegister } from 'react-hook-form';\nimport \"./_style.scss\";\n\ninterface IInputComp {\n  name: string,\n  label: string,\n  required?: boolean,\n  register: UseFormRegister<any>,\n  errors: any,\n  disabled?: boolean,\n  type?: string\n}\n\nconst InputComp = (props: IInputComp) => {\n\n  const {\n    name,\n    label,\n    required = true,\n    register,\n    errors,\n    disabled,\n    type = \"text\"\n  } = props;\n\n  return (\n    <div className=\"input_wrapper\">\n      <input className=\"custom_input\" type={type} placeholder={label} id={name}  {...register(name, { required, disabled })} />\n      <label className=\"custom_label\" htmlFor={name}>{label}</label>\n      {errors[name] && <span className='error_message'>This field is required</span>}\n    </div>\n  )\n}\n\nexport default InputComp;","import React from 'react'\n\ninterface ITopTitleArea {\n  number: string,\n  title: string\n}\n\nconst TopTitleArea = (props: ITopTitleArea) => {\n  const { number, title } = props;\n  return (\n    <div className=\"top_title_area\">\n      <span className=\"title_number title18_bold\">\n        {number}\n      </span> <h4 className=\"title18_bold top_title\" >{title}</h4>\n    </div>\n  )\n}\n\nexport default TopTitleArea","import React from 'react'\nimport \"./_style.scss\";\n\ninterface IOrderCard {\n  id: string,\n  img: string,\n  name: string,\n  count: string,\n  price: string\n}\n\nconst OrderCard = (props: IOrderCard) => {\n  const {\n    id,\n    img,\n    name,\n    count,\n    price\n  } = props;\n  return (\n    <div className=\"order__card\">\n      <div className=\"order__card__left\">\n        <img src={img} alt=\"order1\" />\n        <p className=\"p18_regular\">\n          {name}\n        </p>\n      </div>\n\n      <p className=\"18_regular order__card__order__count\">\n        {count}\n      </p>\n\n      <h3 className=\"title18_bold order__card__order__price\">\n        {price}\n      </h3>\n    </div>\n  )\n}\n\nexport default OrderCard","import React from 'react'\nimport { Select } from 'antd';\nimport { Control, Controller, UseFormRegister } from 'react-hook-form';\nimport \"./_style.scss\";\n\nconst { Option } = Select;\n\ninterface ISelectComp {\n  label: string,\n  name: string,\n  register: UseFormRegister<any>,\n  errors: any,\n  control: Control<any>\n}\n\nconst SelectComp = (props: ISelectComp) => {\n  const { label, name, register, errors, control } = props;\n\n  return (\n    <div className=\"select__wrapper\">\n\n      <Controller\n        name={name}\n        control={control}\n        render={({ field }) => (<Select\n          {...field}\n          size='large'\n          className=\"select__comp\"\n          showSearch\n          style={{ width: \"100%\" }}\n          optionFilterProp=\"children\"\n          filterOption={(input, option) => (option!.children as unknown as string).includes(input)}\n          filterSort={(optionA, optionB) =>\n            (optionA!.children as unknown as string)\n              .toLowerCase()\n              .localeCompare((optionB!.children as unknown as string).toLowerCase())\n          }\n        >\n          <Option value=\"1\">Not Identified</Option>\n          <Option value=\"2\">Closed</Option>\n          <Option value=\"3\">Communicated</Option>\n          <Option value=\"4\">Identified</Option>\n          <Option value=\"5\">Resolved</Option>\n          <Option value=\"6\">Cancelled</Option>\n        </Select>)}\n      />\n      <label className=\"custom__label\">{label}</label>\n      {errors[name] && <span className='error_message'>This field is required</span>}\n    </div>\n  )\n}\n\nexport default SelectComp","import React from 'react'\nimport { DatePicker } from \"antd\";\nimport \"./_style.scss\";\nimport { Control, Controller, UseFormRegister } from 'react-hook-form';\n\ninterface IDatePickerComp {\n  label: string,\n  name: string,\n  register: UseFormRegister<any>,\n  errors: any,\n  control: Control<any>\n}\n\nconst DatePickerComp = (props: IDatePickerComp) => {\n\n  const { label, name, register, errors, control } = props;\n\n  return (\n    <div className=\"datapicker__comp\">\n      <Controller\n        name={name}\n        control={control}\n        render={({ field }) => (\n          <DatePicker placeholder='' className='date__picker' size='large' {...field} />\n        )}\n      />\n      <label className=\"custom__label\">{label}</label>\n      {errors[name] && <span className='error_message'>This field is required</span>}\n    </div>\n  )\n}\n\nexport default DatePickerComp","import React, { useState } from 'react'\nimport { Col, Row, Radio, Space, Divider, Button } from 'antd';\nimport BreadcrumbComp from '../../components/BreadcrumbComp';\nimport { useForm, SubmitHandler } from \"react-hook-form\";\nimport \"./_style.scss\";\nimport InputComp from '../../components/Form/InputComp';\nimport TopTitleArea from './TopTitleArea';\nimport OutlineBtn from '../../components/Buttons/OutlineBtn';\nimport OrderCard from './OrderCard';\nimport type { RadioChangeEvent } from 'antd';\nimport SelectComp from '../../components/Form/SelectComp';\nimport DatePickerComp from '../../components/Form/DatePickerComp';\n\nconst breadcrumbs = [\n  {\n    id: \"1\",\n    toUrl: \"/\",\n    text: \"Главная\",\n  },\n  {\n    id: \"2\",\n    toUrl: \"#\",\n    text: \"Оформить покупку\",\n  }\n];\n\nconst orderData = {\n  id: \"1\",\n  img: \"/assets/img/order_1.png\",\n  name: \"Galaxy A03 Core 2/32Gb Black\",\n  count: \"1 шт\",\n  price: \"1 334 000 cум\"\n}\n\ntype checkoutType = {\n\n}\n\nconst Checkout = () => {\n\n  const { control, register, handleSubmit, watch, formState: { errors } } = useForm<checkoutType>();\n  const onSubmit: SubmitHandler<checkoutType> = data => console.log(data);\n\n  // payment types\n\n  const [paymentType, setPaymenType] = useState(1);\n\n  const onPaymentChange = (e: RadioChangeEvent) => {\n    console.log('radio checked', e.target.value);\n    setPaymenType(e.target.value);\n  };\n\n\n  return (\n    <section className='checkout_wrapper'>\n      <div className=\"container\">\n        <div className=\"checkout_breadcrumb_area\">\n          <BreadcrumbComp breadcrumbs={breadcrumbs} />\n        </div>\n        <div className=\"checkout_body\">\n          <form className=\"checkout_form\" onSubmit={handleSubmit(onSubmit)}>\n            <Row gutter={[30, 30]}>\n              <Col md={17} sm={24} xs={24}>\n                <div className=\"checkout_form_wrapper\">\n                  <h3 className=\"checkout_form_title title28_bold\">\n                    Оформить покупку\n                  </h3>\n                  {/* personal data */}\n\n                  <div className=\"your_data\">\n                    <TopTitleArea number={\"1\"} title={\"Ваши данные\"} />\n\n                    <div className=\"your_data__input__wrapper\">\n                      <InputComp name=\"tel_number\" label={\"Телефон\"} register={register} errors={errors} required={true} />\n                    </div>\n                  </div>\n                  <div className=\"your_data__inputs__wrapper\">\n                    <InputComp name=\"name\" label={\"Имя\"} register={register} errors={errors} required={true} />\n                    <InputComp name=\"surname\" label={\"Фамилия\"} register={register} errors={errors} required={true} />\n                  </div>\n\n                  {/* your orders */}\n                  <div className=\"your__orders\">\n                    <div className=\"your__orders__top\">\n                      <TopTitleArea number={\"2\"} title={\"Ваш заказ\"} />\n                      <OutlineBtn text={\"Изменить\"} />\n                    </div>\n\n                    <OrderCard {...orderData} />\n                  </div>\n\n                  {/* paynemt types */}\n                  <div className=\"payment__types\">\n                    <TopTitleArea number={\"3\"} title=\"Выберите способ оплаты\" />\n\n                    <Radio.Group className=\"payment__types__radios\" onChange={onPaymentChange} value={paymentType}>\n                      <Space style={{ width: \"100%\" }} size={[0, 15]} direction=\"vertical\">\n                        <Radio value={1}>Оплата через Payme </Radio>\n                        <Radio value={2}>Онлайн оплата по карте UZCARD и HUMO\n                        </Radio>\n                        <Radio value={3}>Наличными при получении</Radio>\n                        <Radio value={4}>Рассрочка</Radio>\n                      </Space>\n                    </Radio.Group>\n\n                  </div>\n\n                  {/* how to obtain */}\n\n                  <div className=\"howto__obtain\">\n                    <TopTitleArea number={\"4\"} title={\"Способ получения\"} />\n                    <label className=\"howto__obtain__label\" htmlFor=\"\">Ваш город</label>\n                    <Radio className=\"city\" id=\"city\">Ташкент<span className='city__text'>Доставка Fazo</span></Radio>\n\n                    <label htmlFor=\"\" className=\"howto__obtain__label\">Укажите адрес доставки</label>\n\n                    <div className=\"howto__obtain__selects\">\n                      <SelectComp label={\"Регион / Область*\"} name=\"region\" register={register} errors={errors} control={control} />\n                      <SelectComp label={\"Город  / Район*\"} name=\"district\" register={register} errors={errors} control={control} />\n                    </div>\n                    <div className=\"howto__obtain__address\">\n                      <InputComp name=\"address\" label={\"Адрес\"} register={register} errors={errors} required={true} />\n                      <InputComp name=\"flat_layer\" label={\"Этаж\"} register={register} errors={errors} required={true} />\n                    </div>\n                    <div className=\"howto__obtain__date\">\n                      <DatePickerComp label={\"Дата доставки\"} name=\"district\" register={register} errors={errors} control={control} />\n                    </div>\n                  </div>\n\n                </div>\n              </Col>\n              <Col md={7} sm={24} xs={24}>\n                <div className=\"checkout__from__right\">\n                  <h3 className=\"title18_bold checkout__from__right__title\">\n                    Ваши данные\n                  </h3>\n\n                  <div className=\"checkout__from__right__block\">\n                    <p className=\"p16_regular\">\n                      4 товара на сумму\n                    </p>\n                    <h3 className=\"title18_bold\">\n                      5 262 000 cум\n                    </h3>\n                  </div>\n\n                  <div className=\"checkout__from__right__block\">\n                    <p className=\"p16_regular\">\n                      Доставка\n                    </p>\n                    <h3 className=\"title18_bold\">\n                      бесплатно\n                    </h3>\n                  </div>\n                  <Divider />\n\n                  <div className=\"checkout__from__right__block\">\n                    <p className=\"p16_regular\">\n                      Всего к оплате\n                    </p>\n                    <h3 className=\"title18_bold\">\n                      5 262 000 cум\n                    </h3>\n                  </div>\n\n                  <Button className=\"checkout__from__right__submit__btn\" htmlType='submit' ghost block>Оформить покупку</Button>\n\n\n                  <p className=\"p16_regular checkout__from__right__accept__terms\">\n                    Подтверждая заказ, я принимаю условия <br />\n                    <a className=\"checkout__from__right__accept__terms__link\" href=\"http://\" target=\"_blank\" rel=\"noopener noreferrer\">Пользовательского соглашения</a>\n                  </p>\n                </div>\n              </Col>\n            </Row>\n          </form>\n        </div>\n      </div>\n    </section>\n  )\n}\n\nexport default Checkout"],"names":["props","breadcrumbs","useT","lang","className","separator","map","breadcrumb","last","length","id","text","to","toUrl","onClick","ghost","name","label","required","register","errors","disabled","type","placeholder","htmlFor","number","title","img","count","price","src","alt","Option","Select","control","render","field","size","showSearch","style","width","optionFilterProp","filterOption","input","option","children","includes","filterSort","optionA","optionB","toLowerCase","localeCompare","value","orderData","useForm","handleSubmit","watch","formState","useState","paymentType","setPaymenType","BreadcrumbComp","onSubmit","data","console","log","gutter","md","sm","xs","InputComp","OutlineBtn","onChange","e","target","direction","htmlType","block","href","rel"],"sourceRoot":""}